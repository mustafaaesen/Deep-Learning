# -*- coding: utf-8 -*-
"""Deep Learning Project-3 .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jwuaCGBCXYsVzxNdHOHoOyBhruimMLix
"""

#Sosyal Medya Reklamları Veri Seti

"""
Çeşitli kullanıcıların verilerine göre reklama tıklayıp tıklamayacğını
tahmin eden ann modeli projesi

"""

from google.colab import files
uploaded = files.upload()

import pandas as pd

df= pd.read_csv("Social_Network_Ads.csv")

df.head()

#Veri Önişleme

df.drop("User ID",axis=1,inplace=True)
#id sütunu işe yaramaz atılabilir

df["Gender"]=df["Gender"].map({"Female":0, "Male":1})
#cinsiyeti sayısala çevirebiliriz 0 erkek 1 kadın

df.head()

#Eğitim test verisi ayırma ve ölçekleme

from sklearn.model_selection import train_test_split
from sklearn.preprocessing  import StandardScaler


X=df.drop("Purchased",axis=1)
y=df["Purchased"]
#girdi ve hedeflerin ayarlanması

X_train, X_test, y_train, y_test= train_test_split(X, y, test_size=0.2, random_state=42)
#%80 e %20 eğitim ve test verisi olarak ayarlanması

scaler=StandardScaler()
#sayısal değerleri lçekleyebilmek için

X_train_scaled= scaler.fit_transform(X_train)
X_test_scaled= scaler.transform(X_test)

#ANN modeli oluşturma ve eğitme

from tensorflow.keras.models import Sequential

from tensorflow.keras.layers import Dense

model=Sequential()

#model başlatma

model.add(Dense(16,activation='relu',input_shape=(X_train_scaled.shape[1],)))
#giriş katmanı 3 özelik gizli katman

model.add(Dense(8,activation='relu'))
#2. gizli katman

model.add(Dense(1, activation='sigmoid'))
#çıkış katmanı

#Modeli Derleme

model.compile(
    optimizer='adam',
    loss='binary_crossentropy',
    metrics=['accuracy']
)

#Model Eğitme

history=model.fit(

                  X_train_scaled,#ölçeklenmiş eğitim verisi
                  y_train,
                  epochs=50,   # 50 kez model eğitimi
                  batch_size=16,  # her adımda 16 örnek
                  validation_split=0.1,  #%10 u test için ayrıldı verilerin
                  verbose=1
)

#Eğitim Doğruluğunu Görselleştirme

import matplotlib.pyplot as plt

plt.plot(history.history['accuracy'],label='Eğitim Doğruluğu')
plt.plot(history.history['val_accuracy'],label='Doğrulama Doğruluğu')
plt.title("Model Doğruluğu")
plt.xlabel("Epoch")
plt.ylabel("Accuracy")
plt.legend()
plt.grid()
plt.show()

#Model Testi ve Değerlendirme

y_pred_prob = model.predict(X_test_scaled)
#test verisiyle tahmin yap

y_pred= (y_pred_prob>0.5).astype(int)
#olasılık değerlerini 0 ve 1 e çevir

#Değerlendirme Metriklerini Hesaplama

from sklearn.metrics import accuracy_score, confusion_matrix,classification_report

print("Test Doğruluğu",accuracy_score(y_test, y_pred))

print("Confusion Matrix:\n",confusion_matrix(y_test, y_pred))

print("Classification Report:\n",classification_report(y_test,y_pred))

#Kullanıcıdan Girdi Alma ve Tahmin Etme

import numpy as np

gender=int(input("Cinsiyet Giriniz (Kadın=>0, Erkek0>1)"))

age=int(input("Yaşınızı Giriniz:"))

salary= int(input("Aylık tahmini gelirinizi giriniz:"))

new_input = np.array([[gender,age,salary]])

#verinin listeye alınması

new_input_scaled= scaler.transform(new_input)
#scalerize edilmesi

prediction=model.predict(new_input_scaled)

if prediction >0.5:
  print("Tahmin: Bu Kullanıcı Reklama TIKLAR")

else:
  print("Tahmin Bu Kulalnıcı Reklama TIKLAMAZ")

"""
ANN modeli kendini veri setinden yüksek yaş grubu ve yüksek gelirli kişilerin
bu reklama tıklayacğı şeklinde eğitmiş

cinsiyet kategorisi çok da özele benzemiyor sınırlar hariç

"""